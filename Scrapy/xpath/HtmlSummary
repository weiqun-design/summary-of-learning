1. XPath有7种类型的节点：元素，属性，文本，命名空间，处理指令，注视以及文档根节点
2. XML被设计用来传输和存储数据
3. HTML被设计用来显示数据
4. XML是没有预定义的标签
5. HTML指的是超文本标记语言。
6. HTML不是编程语言，而是一种标记语言（markup language）
7. 标记语言是一套标记标签
8. HTML使用标记标签来描述网页
9. HTML文档也被称为网页
10. HTML标题   <h1> - <h6>等标签进行定义
11. HTML段落   <p>
12. HTML链接   <a>
13. HTML图像   <img>
14. HTML元素指的是从开始标签到结束标签，元素的内容是开始标签与结束标签之间的内容
，某些HTML元素具有空内容，空元素在开始标签中进行关闭（以开始标签的结束而结束），大
多数HTML元素可拥有属性
15. 大多数HTML元素可以嵌套
16. <br>就是么有关闭标签的空元素，换行，直接使用<br/>
17. HTML标签可以拥有属性。属性提供了有关HTML元素的更多的信息，属性在开始标签中规定。属性值应始终加引号
18. 大多数HTML元素的属性：class 值 classname，id 值 id， style值style_definition, title值text
19. <hr/> 标签在HTML页面中创建水平线
20. <! ...>   为注释
21. style属性的作用：提供了一种改变所有HTML元素的样式的通用方法。
22. 有三种方式插入样式表：外部样式表，内部样式表，内联样式
23. 外部样式表：
<head>
<link rel="stylesheet" type="text/css" href="mystyle.css">
<head>
24. 内部样式表，当单个文件需要特别样式时，可以使用内部样式表。可以在head部分通过style标签定义内部样式表
<head>
<style type="text/css">body {background-color:red} p {margin-left:20px}
</style>
<head>
25. 内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式。使用内联样式的方法是在相关的标签中使用样式属性。样式属性可以包含任何CSS属性
<p style="color:red; margin-left:20px>This is a paragraph</p>
26. HTML 链接语法 <a href="url>Link text</a>
27. HTML 链接 target属性，使用target属性，可以定义被链接的文档在何处显示
<a href="http://www.w3school.com.cn/" target="_blank">Visit W3School!</a>
28. HTML 链接 name属性规定锚的名称，当使用命名锚时，我们可以闯进直接跳至该命名锚的链接，这样使用者就无需不停地滚动页面来寻找他们需要的信息了。
首先，对锚进行命名   <a name="tips">基本的注意事项-有用的提示</a>
然后，在同一个文档中创建指向该锚的链接：<a href=#tips>有用的提示</a>
也可以在其他页面中创建执行该锚的链接：<a href="http://www.w3school.com.cn/html/html_links.asp#tips">有用的提示</a>
29. 定义图像<img src="url"/>   图像可替换文本<img src="boat.gif" alt="Big Boat"> 当浏览器无法载入图像时，替换文本属性告诉读者他们失去的信息。
30. 表格由<table>标签来定义。每个表格均有若干行<tr>, 每行被分割为若干单元格。字母td指表格数据，即数据单元格的内容。数据单元格可以包含文本、图片、列表、
段落、表单、水平线、表格等。
31. 表头用th标签定义 <th>Heading</th>
32. HTML支持有序、无序和定义列表
33. HTML块元素，大多数HTML元素被定义为块级元素或内联元素。块级元素在浏览器显示时，通常会以新行来开始（和结束）。如<h1>,<p>,<ul>,<table>
34. HTML内联元素 ，内联元素在显示时通常不会以新行开始
35. HTML <div>元素，<div>时块级元素。定义文档中的分区或节。
36. HTML<span>元素是内联元素，可以用作文本的容器。用来组合文档中的行内元素。
37. HTML框架，通过使用框架，可以在同一个浏览器窗口中显示不止一个页面。每份HTML文档称为一个框架，并且每个框架都独立于其他的框架。
38. 使用框架的坏处：开发人员必须同时跟踪更多的HTML文档，很难打印整张页面。
39. 框架结构标签（<frameset>）定义如何将窗口分割为框架, 每个frameset定义了一系列行或列
40. Frame标签定义了放置在每个框架中的HTML文档
<frameset cols="25%,75%">
  <frame src="frame_a.html">
  <frame src="frame_b.html">
</frameset>
41. iframe用于在网页内显示网页  <iframe src="demo_iframe.html" width="200" height="200"></iframe>
42. iframe可用作链接的目标target
<iframe src="demo_iframe.htm" name="iframe_a"></iframe>
<p><a href="http://www.w3school.com.cn" target="iframe_a">W3School.com.cn</a></p>
43. HTML背景<body>拥有两个配置背景的标签。背景可以是颜色或者图像
<body bgcolor="#000000">
<body bgcolor="rgb(0,0,0)">
<body bgcolor="black">
<body background="clouds.gif">
<body background="http://www.w3school.com.cn/clounds.gif">
44. JavaScript使HTML页面具有更强的动态和交互性
<script>标签用于定义客户端脚本，比如JavaScript
script元素既可包含脚本语句，也可通过src属性指向外部脚本文件
<script type="text/javascript">
document.write("Hello World!")
</script>
45. HTML头部元素
<head>元素是所有头部元素的容器。<head>内的元素可包含脚本，指示浏览器在何处可以找到样式表，提供元信息。
<title> <base> <link> <meta> <script>以及<style>
46. <title>标签定义文档的标题，在搜有HTML/XHTML文档中都是必须的。title元素能够定义浏览器工具栏中的标题，提供页面被添加到收藏夹时显示的标题
显示在搜索引擎结果中的页面标题。
<!DOCTYPE html>
<html>
<head>
<title>Title of the document</title>
</head>
<body>
The content of the document....
</body>
</html>
47. <base>元素
<base>标签为页面上所有链接规定默认地址或默认目标（target）
<head>
<base href="http://www.w3school.com.cn/images/" />
<base target="_blank" />
</head>
48. <link>元素 定义文档与外部资源之间的关系，最常用于连接样式表
<head>
    <link rel="stylesheet" type="text/css" href="mystyle.css" />
</head>

49. HTML <style>元素 <style>标签用于为HTML定义样式信息
<head>
    <style tyoe="text/css">
        body{background-color:yellow}
        p{color:blue}
    </style>
</head>

50. <meta>元素 元数据metadata是关于数据的信息。
<meta>标签提供关于HTML文档的元数据。元数据不会显示在页面上，但是对于机器是可读的。
典型的情况是，meta元素被用于规定页面的描述、关键词、文档的作者、最后修改时间以及其他元数据。
<meta>标签始终位于head元素中。
元数据可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他web服务。

51. HTML中的预留字符必须被替换为字符实体
52. URL最流行的scheme：http https ftp file
    http  超文本传输协议
    https 安全超文本传输协议
    ftp   文件传输协议
    file  用于计算机上的文件
53. URL只能使用ASCII字符集来通过因特网进行发送。由于URL常常会包含ASCII集合之外的字符，URL必须转换为有效的ASCII格式。
54. HTML表单用于搜集不同类型的用户输入
55. <form>元素定义HTML表单
<form>
First name:<br>
<input type="text" name="firstname">
<br>
Last name:<br>
<input type="text" name="lastname">
</form>
56. 单选按钮输入<input type="radio">
57. 提交按钮 <input type="submit">定义用于向表单处理程序提交表单的按钮
58. action属性定义在提交表单时执行的动作，向服务器提交表单的通常做法是使用提交按钮<form action="action_page.php">
如果省略action属性，则action会被设置为当前页面。
59. method属性规定在提交表单时所使用的HTTP方法
<form action="action_page.php" method="GET">
<form action="action_page.php" method="POST">
60. 如果表单提交是被动的，默认是GET，并且没有敏感信息，当您使用GET时，表单数据在页面地址栏中是可见的：action_page.php?firstname=Mickey&lastname=Mouse
61. 如果表单正在更新数据，或者包含敏感信息，POST的安全性更好，因为在页面地址栏中被提交的数据是不可见的。
62. <fieldset>组合表单数据，<fieldset>元素组合表单中的相关数据，<legend>元素为<fieldset>元素定义标题。
<form action="action_page.php">
<fieldset>
<legend>Personal information:</legend>
First name:<br>
<input type="text" name="firstname" value="Mickey">
<br>
Last name:<br>
<input type="text" name="lastname" value="Mouse">
<br><br>
<input type="submit" value="Submit"></fieldset>
</form>

63. HTML<form>元素，已设置所有可能的属性，是这样的：
<form action="action_page.php" method="GET" target="_blank" accept-charset="UTF-8"
ectype="application/x-www-form-urlencoded" autocomplete="off" novalidate>
.
form elements
.
</form>

64. HTML表单元素 <input>    <select>下拉列表   <option>定义待选择的选项  <textarea>多行输入字段 文本域
<button>元素 按钮
65. HTML5增加了<datalist> <keygen> <output>
<datalist>元素为<input>元素规定预定义选项列表，用户会在他们输入数据时看到预定义选项的下拉列表。
<input>元素的list属性，必须引用<datalist>元素的id属性

<form action="action_page.php">
    <input list="browsers">
        <datalist id = "browsers">
            <option value="Internet Explorer">
            <option value="Firefox">
            <option value="Chrome">
            <option value="Opera">
            <option value="Safari">
        </datalist>
</form>

66. <input type="text"> 定义供文本输入的单行输入字段
<form>
First name:<br>
<input type="text" name="firstname">
<br>
Last name:<br>
<input type="text" name="lastname">
</form>

67. <input type="password">定义密码字段
<form>
    User name:<br>
    <input type="text" name="username">
    <br>
    User password:<br>
    <input type="password" name="psw">
</form>

68. <input type="submit">定义提交表单数据至表单处理程序的按钮
表单处理程序通常是包含处理输入数据的脚本的服务器页面。
在表单的action属性中规定表单处理程序 （form-handler）：
<form action="action_page.php">
    First name:<br>
    <input type="text" name="firstname" value="Mickey">
    <br>
    Last name:<br>
    <input type="text" name="lastname" value="Mouse">
    <br><br>
    <input type="submit" value="Submit">
</form>

69. <input type="radio"> 定义单选按钮
70. <input type="checkbox"> 定义复选框
71. <input type="button"> 定义按钮
72. HTML5输入类型 HTML5增加了多个新的输入类型：color,date,datetime,datetime-local,email,month,number,range,search,tel,time,
url,week
73. <input type="number">用于应该包含数字值的输入字段
74. input的value属性规定输入字段的初始值
75. input的readonly属性规定输入字段为只读（不能修改）
<form action="">
    First name:<br>
    <input type="text" name="firstname" value="John" readonly>
    <br>
    Last name:<br>
    <input type="text" name="lastname">
</form>

76. disabled属性规定输入字段是禁用的，被禁用的元素是不可用和不可点击的，被禁用的元素不会被提交
<form action="">
    First name:<br>
    <input type="text" name="firstname" value="John" disabled>
    <br>
    Last name:<br>
    <input type="text" name="lastname">
</form>

77. size属性
size属性规定输入字段的尺寸
<form action="">
First name:<br>
<input type="text" name-"firstname" value="John size="40">
<br>
Last name:<br>
<input type="text" name="lastname">
</form>

78. maxlength属性规定输入字段允许的最大长度























