1. MF的funkSVD，BiasSVD等都只考虑来user和item特征，但实际上一个预测问题包含的特征维度可能很多
2. FM与MF的区别：FM矩阵将uesr和item都进行了one-hot编码作为特征，使得特征维度非常巨大且稀疏
                矩阵分解MF是FM的特里，即特征只有userid和itemid的FM模型
                矩阵分解MF只适用于评分预测，进行简单的特征计算，无法利用其他特征
                FM引入了更多辅助信息作为特征
                FM在计算二阶特征组合稀疏的时候，使用了MF
3. FM的学习算法：ALS，交替最小二乘法
               SGD，随机梯度下降法
               MCMC，马尔科夫链蒙特卡罗法
4. 因为计算量大，因此一般FM采用二阶特征组合的方式；实际行高阶/非线性的特征组合适合采用深度模型
5. FM算法的每个特征只有一个隐向量，FM是FFM的特例，FFM每个特征有多个隐向量，使用哪个，取决于和哪个向量进行点乘
6. xlearn提供python接口，支持LR，FM，FFM算法等
7. DeepFM算法，FM可以做特征组合，但是计算量大，一般只考虑2阶特征组合，deepFM = FM + DNN，既考虑低阶，又能考虑到高阶特征。
8. 激活函数relu和tanh比sigmoid更适合
9. relu对于所有深度模型来说更适合
10. 深度模型设置为0.6-0.9最合适
11. 每层的神经元个数越多，未必越好，设置为200-400个比较适合
12. 隐藏层层数，层数越多，起初效果明显，之后效果不明显，甚至更差，容易过拟合，3层比较适合
13. 网络形状：固定200-200-200，增长100-200-300，下降300-200-100，菱形150-300-150，其中采用固定的形状效果最好
14. 基于内容的推荐：依赖性低，不需要动态的用户行为，只要有内容就可以进行推荐
15. 基于内容的推荐在系统不同阶段都可以使用：系统冷启动，内容是任何系统天生的属性，可以从中挖掘到特征，实现推荐系统的冷启动。
    一个复杂的推荐系统是从基于内容的推荐成长起来的。
                                      商品冷启动，无论什么阶段，总会有新的物品加入，这时只要有内容信息，就可以帮它进行推荐。
