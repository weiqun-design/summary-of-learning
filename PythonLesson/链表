链表是实现了数据之间保持逻辑顺序，但存储空间不必按顺序的方法。可以用一个图来表示这种链表的数据结构：

链表中的基本要素：

结点(也可以叫节点或元素)，每一个结点有两个域，左边部份叫值域，用于存放用户数据；右边叫指针域，一般是存储着到下一个元素的指针
head结点，head是一个特殊的结节，head结点永远指向第一个结点
tail结点，tail结点也是一个特殊的结点，tail结点永远指向最后一个节点
None，链表中最后一个结点指针域的指针指向None值，因也叫接地点，所以有些资料上用电气上的接地符号代表None

链表的常用方法：
LinkedList() 创建空链表，不需要参数，返回值是空链表
is_empty() 测试链表是否为空，不需要参数，返回值是布尔值
append(data) 在尾部增加一个元素作为列表最后一个。参数是要追加的元素，无返回值
iter() 遍历链表，无参数，无返回值，此方法一般是一个生成器
insert(idx,value) 插入一个元素，参数为插入元素的索引和值
remove(idx)移除1个元素，参数为要移除的元素或索引，并修改链表
size() 返回链表的元素数，不需要参数，返回值是个整数
search(item) 查找链表某元素，参数为要查找的元素或索引，返回是布尔值




