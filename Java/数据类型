Java基本类型

整数类型 byte，short，int，long
浮点数类型 float，double
字符类型 char
布尔类型 boolean
数组是引用类型，在使用索引访问数组时，如果索引超出范围，运行时将报错
String是引用类型，String是不可变类型

1、对于基本类型参数，在方法体内对参数进行重新赋值，并不会改变原有变量的值。
2、对于引用类型参数，在方法体内对参数进行重新赋予引用，并不会改变原有变量所持有的引用。
3、方法体内对参数进行运算，不影响原有变量的值。
4、方法体内对参数所指向对象的属性进行操作，将改变原有变量所指向对象的属性值。

字符编码
在早期的计算机系统中，为了给字符编码，美国国家标准学会（ANSI）制定了一套英文字母、数字和常用符号的编码，它占用一个字节，编码范围从0到127，
最高位始终为0，成为ASCII编码。例如'A'的编码为0x41，'1'的编码为0x31。

由于其他国家语言的存在，导致一个字节不够，为了统一全球所有语言的编码，全球统一码联盟发布了Unicode编码，它把世界上主要语言都纳入同一个编码。
由于英文字符的unicode编码高字节总是00，包含大量英文的文本会浪费空间，所以出现了UTF-8编码，它是一种变长编码，用来把固定长度的Unicode编码变成
1～4字节的变长编码。UTF-8编码的另一个好处是容错能力强

Java中的String和char在内存中总是以Unicode编码表示


引用类型可以赋值为null，表示空，但基本类型不能复制为null；


JavaBean
在java中，有很多class的定义都符合这样的规范：
若干private实例字段
通过public方法来读写实例对象
这种class被称为JavaBean

只有getter的属性称为只读属性
只有setter的属性称为只写属性

JavaBean的作用
JavaBean主要用来传递数据，即把一组数据组合成一个JavaBean便于传输。此外，JavaBean可以方便地被IDE工具分析，生成读写属性的代码，主要用在图
形界面的可视化设计中。


枚举类
不同类型的枚举不能互相比较或者赋值，因为类型不符。
因为枚举累是一种引用类型，引用类型比较时需使用equals()方法，但是enum类型可以除外。
因为enum是一个class，每个枚举的值都是class实例。


BigInteger
在Java中，由CPU原生提供的整型最大范围64位long型整数。使用long型整数可以直接通过CPU指令进行计算，速度非常快。
如果整数范围超过了long型，可以使用java.math.BigInteger, 可以表示任意大小的整数。
BigInteger继承自Number类，


常用工具类
Math类就是用来进行数学计算的，它提供了大量的静态方法来便于我们实现数学计算。
Random用来创建伪随机数，伪随机数是指只要制定一个初始的种子，产生的随机数序列是完全一样的。

Random r = new Random();
如果不给定种子，就使用系统当前时间戳作为种子，因此每次运行时，种子不同，得到的伪随机数序列就不同。
如果我们在创建Random实例时制定一个种子，就会得到完全确定的随机数序列。

需要使用安全随机数时，必须使用SecureRandom，绝不能使用Random


























